version: '3.2'
services:
  bankingapi:
    build:
      context: ./src
      dockerfile: /PubliSub.Banking.Api/Dockerfile
    ports:
      - "8000:9870"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - rabbitmq
      - sqlserver
      - transferapi
    networks:
      - messaging_net
    restart: on-failure
  transferapi:
    build:
      context: ./src
      dockerfile: /PubliSub.Transfer.Api/Dockerfile
    ports:
      - "8001:9871"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - rabbitmq
      - sqlserver
    networks:
      - messaging_net
    restart: on-failure
  rabbitmq:
    image: rabbitmq:3.10.6-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq:/var/lib/rabbitmq/mnesia'
    networks:
      - messaging_net
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "SqlServer2019!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - messaging_net
  #mssqltools:
  #  image: mcr.microsoft.com/mssql-tools
  #  depends_on:
  #    - sqlserver
  #  links:
  #    - sqlserver
  #  restart: on-failure
  #  volumes:
  #    - ./scripts/create-database.sql:/tmp/create-database.sql
  #    - ./scripts/init-base.sh:/tmp/init-base.sh
  #  command: /bin/bash ./tmp/init-base.sh
  #  networks:
  #    - messaging_net
networks:
  messaging_net:
    driver: bridge
volumes:
  sqlserver_data: